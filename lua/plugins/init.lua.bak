return {
	-- statuscool
	-- {
	-- 	'luukvbaal/statuscol.nvim',
	-- 	config = function() require('statuscol').setup(
	-- 		{
	-- 			separator = ' ',
	-- 			order = 'SNsFs',
	-- 			setopt = true,
	-- 		}
	-- 		,
	-- 	end
	-- },

	'luukvbaal/statuscol.nvim',
	-- Essentials
	'lewis6991/impatient.nvim',
	'jamessan/vim-gnupg',
	'romainl/vim-cool',
	'tpope/vim-obsession',
	'tpope/vim-vinegar',
	'tpope/vim-commentary',
	'tpope/vim-surround',
	'tpope/vim-fugitive',
	'farmergreg/vim-lastplace',
	'echasnovski/mini.nvim',
	'sbdchd/neoformat',
	'ojroques/vim-oscyank',
	'equalsraf/neovim-gui-shim',

	-- Trouble
	{
		'folke/trouble.nvim',
		dependencies = 'nvim-tree/nvim-web-devicons',
		config = function(,
			require('trouble').setup(,
		end,
	},

	-- LSP
	{
		'VonHeikemen/lsp-zero.nvim',
		dependencies = {
			-- LSP Support
			{ 'neovim/nvim-lspconfig' },
			{ 'williamboman/mason.nvim' },
			{ 'williamboman/mason-lspconfig.nvim' },
			-- Autocompletion
			{ 'hrsh7th/nvim-cmp' },
			{ 'hrsh7th/cmp-buffer' },
			{ 'hrsh7th/cmp-path' },
			{ 'saadparwaiz1/cmp_luasnip' },
			{ 'hrsh7th/cmp-nvim-lsp' },
			{ 'hrsh7th/cmp-nvim-lua' },
			-- Snippets
			{ 'L3MON4D3/LuaSnip' },
			-- Snippet Collection (Optional,
			{ 'rafamadriz/friendly-snippets' },
			-- Useful status updates for LSP
			{ 'j-hui/fidget.nvim' },
			-- Additional lua configuration, makes nvim stuff amazing
			{ 'folke/neodev.nvim' },
		},
	},

	-- Treesitter
	{
		'nvim-treesitter/nvim-treesitter',
		build = function(,
			pcall(require('nvim-treesitter.install').update({ with_sync = true }),
		end,
	},

	-- Additional text objects via treesitter
	'nvim-treesitter/nvim-treesitter-textobjects',

	-- Gitsigns
	'lewis6991/gitsigns.nvim',


	'kyazdani42/nvim-web-devicons',
	-- use {
	--   'nvim-lualine/lualine.nvim',
	--   after = 'github-nvim-theme',
	--   requires = { 'kyazdani42/nvim-web-devicons', opt = true },
	--   config = function(,
	--     require('lualine').setup {
	--       options = {
	--         theme = 'auto' -- or you can assign github_* themes individually.
	--         -- ... your lualine config
	--       }
	--     }
	--   end
	-- }
	--
	-- Colorscheme
	{
		'projekt0n/github-nvim-theme',
		config = function(,
			require('github-theme').setup({
				theme_style = 'dimmed',
				comment_style = 'italic',
				keyword_style = 'italic',
				function_style = 'italic',
				variable_style = 'italic',
			},
		end,
	},

	-- 'lukas-reineke/indent-blankline.nvim' -- Add indentation guides even on blank lines
	'numToStr/Comment.nvim', -- 'gc' to comment visual regions/lines
	-- 'tpope/vim-sleuth', -- Detect tabstop and shiftwidth automatically

	-- Fuzzy Finder (files, lsp, etc,
	{ 'nvim-telescope/telescope.nvim', branch = '0.1.x', 
	dependencies = { 'nvim-lua/plenary.nvim' } },

	-- Fuzzy Finder Algorithm which requires local dependencies to be built. Only load if `make` is available
	'natecraddock/telescope-zf-native.nvim',
	-- use { 'nvim-telescope/telescope-fzf-native.nvim', run = 'make', cond = vim.fn.executable 'make' == 1 }
}
